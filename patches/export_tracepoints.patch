From b9c01bb64a285f8d49995eeddcd12d5eba25c084 Mon Sep 17 00:00:00 2001
From: Anton Blanchard <anton@ozlabs.org>
Date: Wed, 5 Aug 2020 11:19:55 +1000
Subject: [PATCH 1/2] tracing/events: Export trace symbols required for
 osjitter tool

All tracepoint symbols could be used by modules back when I wrote
the osjitter tool. Now they need to be explicitly exported, we
should probably just build the tool into ftrace directly.

Signed-off-by: Anton Blanchard <anton@ozlabs.org>
---
 arch/powerpc/kernel/irq.c | 9 +++++++++
 kernel/sched/core.c       | 2 ++
 kernel/softirq.c          | 7 +++++++
 kernel/time/timer.c       | 5 +++++
 kernel/workqueue.c        | 3 +++
 5 files changed, 26 insertions(+)

diff --git a/arch/powerpc/kernel/irq.c b/arch/powerpc/kernel/irq.c
index 05b1cc0e009e..35ed9bec72ac 100644
--- a/arch/powerpc/kernel/irq.c
+++ b/arch/powerpc/kernel/irq.c
@@ -76,6 +76,15 @@
 #include <asm/trace.h>
 #include <asm/cpu_has_feature.h>
 
+EXPORT_TRACEPOINT_SYMBOL(timer_interrupt_entry);
+EXPORT_TRACEPOINT_SYMBOL(timer_interrupt_exit);
+EXPORT_TRACEPOINT_SYMBOL(irq_entry);
+EXPORT_TRACEPOINT_SYMBOL(irq_exit);
+EXPORT_TRACEPOINT_SYMBOL(hcall_entry);
+EXPORT_TRACEPOINT_SYMBOL(hcall_exit);
+EXPORT_TRACEPOINT_SYMBOL(opal_entry);
+EXPORT_TRACEPOINT_SYMBOL(opal_exit);
+
 DEFINE_PER_CPU_SHARED_ALIGNED(irq_cpustat_t, irq_stat);
 EXPORT_PER_CPU_SYMBOL(irq_stat);
 
diff --git a/kernel/sched/core.c b/kernel/sched/core.c
index 4a0e7b449b88..934009ff5a5a 100644
--- a/kernel/sched/core.c
+++ b/kernel/sched/core.c
@@ -10,6 +10,8 @@
 #include <trace/events/sched.h>
 #undef CREATE_TRACE_POINTS
 
+EXPORT_TRACEPOINT_SYMBOL_GPL(sched_switch);
+
 #include "sched.h"
 
 #include <linux/nospec.h>
diff --git a/kernel/softirq.c b/kernel/softirq.c
index bf88d7f62433..8cc85a0daba1 100644
--- a/kernel/softirq.c
+++ b/kernel/softirq.c
@@ -29,6 +29,13 @@
 #define CREATE_TRACE_POINTS
 #include <trace/events/irq.h>
 
+EXPORT_TRACEPOINT_SYMBOL_GPL(irq_handler_entry);
+EXPORT_TRACEPOINT_SYMBOL_GPL(irq_handler_exit);
+EXPORT_TRACEPOINT_SYMBOL_GPL(softirq_entry);
+EXPORT_TRACEPOINT_SYMBOL_GPL(softirq_exit);
+EXPORT_TRACEPOINT_SYMBOL_GPL(tasklet_entry);
+EXPORT_TRACEPOINT_SYMBOL_GPL(tasklet_exit);
+
 /*
    - No shared variables, all the data are CPU local.
    - If a softirq needs serialization, let it serialize itself
diff --git a/kernel/time/timer.c b/kernel/time/timer.c
index 026ac01af9da..2f53a17802b8 100644
--- a/kernel/time/timer.c
+++ b/kernel/time/timer.c
@@ -56,6 +56,11 @@
 #define CREATE_TRACE_POINTS
 #include <trace/events/timer.h>
 
+EXPORT_TRACEPOINT_SYMBOL_GPL(hrtimer_expire_entry);
+EXPORT_TRACEPOINT_SYMBOL_GPL(hrtimer_expire_exit);
+EXPORT_TRACEPOINT_SYMBOL_GPL(timer_expire_entry);
+EXPORT_TRACEPOINT_SYMBOL_GPL(timer_expire_exit);
+
 __visible u64 jiffies_64 __cacheline_aligned_in_smp = INITIAL_JIFFIES;
 
 EXPORT_SYMBOL(jiffies_64);
diff --git a/kernel/workqueue.c b/kernel/workqueue.c
index c41c3c17b86a..c7b1f5a5c608 100644
--- a/kernel/workqueue.c
+++ b/kernel/workqueue.c
@@ -361,6 +361,9 @@ static void show_pwq(struct pool_workqueue *pwq);
 #define CREATE_TRACE_POINTS
 #include <trace/events/workqueue.h>
 
+EXPORT_TRACEPOINT_SYMBOL_GPL(workqueue_execute_end);
+EXPORT_TRACEPOINT_SYMBOL_GPL(workqueue_execute_start);
+
 #define assert_rcu_or_pool_mutex()					\
 	RCU_LOCKDEP_WARN(!rcu_read_lock_held() &&			\
 			 !lockdep_is_held(&wq_pool_mutex),		\
-- 
2.26.2

